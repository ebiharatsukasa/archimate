<div class="container mx-auto">
  <div class="max-w-5xl mx-auto p-4">
    <%= form_with model:architecture, local: true do |f| %>
      <%= render 'shared/error_messages', object: f.object %>
      <div class="mb-12">
        <%= f.label :name, class: 'block text-black mb-2' %>
        <%= f.text_field :name, class: 'form-input block w-full py-1 border border-gray-400 rounded-full transition duration-200 focus:border-transparent focus:ring-third focus:ring-offset-2 focus:ring-offset-gray-500', placeholder: (t 'defaults.National Museum of Western Art'), required: true %>
      </div>
      <div class="mb-12">
        <%= f.label :location, class: 'block text-black mb-2' %>
        <%= f.text_field :location, class: 'form-input block w-full py-1 border border-gray-400 rounded-full transition duration-200 focus:border-transparent focus:ring-third focus:ring-offset-2 focus:ring-offset-gray-500', placeholder: (t 'defaults.Taito-ku, Tokyo-to 110-0007 Japan'), required: true %>
      </div>
      <div class="mb-12">
        <%= f.label :open_range, class: 'block text-black mb-2' %>
        <%= f.select :open_range, {'公開': 'publish', '非公開': 'unpublish'}, {}, class: 'form-input block w-full py-1 border border-gray-400 rounded-full transition duration-200 focus:border-transparent focus:ring-third focus:ring-offset-2 focus:ring-offset-gray-500', required: true %>
        <p class="text-sm text-gray-500 pt-2">※所在地が非公開の作品（個人邸等）に関しては、公開範囲を「非公開」に設定してください</p>
      </div>
      <div class="mb-12">
        <%= f.label :architect, class: 'block text-black mb-2' %>
        <%= f.text_field :architect, class: 'form-input block w-full py-1 border border-gray-400 rounded-full transition duration-200 focus:border-transparent focus:ring-third focus:ring-offset-2 focus:ring-offset-gray-500', placeholder: (t 'defaults.Le Corbusier') %>
      </div>
      <div class="mb-12">
        <%= f.label :description, class: 'block text-black mb-2' %>
        <%= f.text_area :description, size: "40x10", class: 'form-input block w-full py-1 border border-gray-400 rounded-3xl transition duration-200 focus:border-transparent focus:ring-third focus:ring-offset-2 focus:ring-offset-gray-500' %>
      </div>
      <div class="mb-20">
        <%= f.label :images, class: 'block text-black mb-2' %>
        <div id="image-preview-container">
          <div class="mb-2">
            <label class="mt-2 py-2 bg-white rounded-full flex justify-center items-center border border-gray-400">
              <i class="fa-solid fa-camera"></i>
              <span class="ml-2">画像を選択する</span> 
              <%= f.file_field :images, class: "hidden", multiple: true, onchange: 'showPreview(event)' %>
            </label>
          </div>
        </div>
        <%= f.hidden_field :images_cache %>
      </div>
      <div class="flex justify-center">
        <%= f.submit (t 'defaults.record'), class: 'bg-second hover:scale-105 hover:shadow-lg text-black w-full py-1 mb-12 rounded-full focus:outline-none focus:shadow-outline' %>
      </div>
    <% end %>
  </div>
</div>

<!-- turbolinksの無効化 -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // turbolinksを無効化するための設定
    var turbolinksEnabled = <%= Rails.configuration.action_view.form_with_generates_remote_forms %>;

    if (turbolinksEnabled) {
      document.querySelector('form').addEventListener('submit', function(event) {
        event.preventDefault();
        Turbolinks.visit(event.target.action + '?' + new URLSearchParams(new FormData(event.target)).toString());
      });
    }
  });
</script>

<script>
  // 画像ファイルのプレビューを表示する関数
  function showPreview(event) {
    const previewContainer = document.getElementById('image-preview-container');

    const files = Array.from(event.target.files); // 選択されたファイルを配列に保存

    files.forEach((file) => {
      const reader = new FileReader();

      reader.onload = function(e) {
        const previewDiv = document.createElement('div');
        previewDiv.classList.add('mb-4');

        const image = document.createElement('img');
        image.src = e.target.result;
        image.classList.add('block', 'object-cover', 'rounded-md', 'mr-2');

        previewDiv.appendChild(image);
        previewContainer.appendChild(previewDiv);
      };

      reader.readAsDataURL(file); // ファイルの内容を読み込む
    });
  }
</script>
