<% if @architecture.present? %>
  <div class="flex flex-col md:flex-row items-end">
    <div class="w-full md:w-3/4 h-96 md:h-screen relative">
      <% if @architecture.images.any? %>
        <%= image_tag @architecture.images.first.url, class: 'image absolute inset-0 object-cover object-top h-full w-full' %>
      <% else %>
        <%= image_tag 'architecture_placeholder.png', class: 'absolute inset-0 object-cover object-top h-full w-full' %>
      <% end %>
      <div class="progress-bar h-1 bg-second absolute top-0 left-0 ease-in-out duration-300"></div>
      <div class="description hidden absolute inset-0 bg-black bg-opacity-50 text-white p-4 tracking-widest">
        <button class="close-btn absolute top-2 right-2 p-2 text-xl text-white">
          <span class="fa-stack hover:scale-110">
            <i class="fas fa-circle fa-stack-2x text-white fa-stack-2x"></i>
            <i class="fa-solid fa-xmark text-theme text-2xl fa-stack-1x pt-1"></i>
          </span>
        </button>
        <div class="flex flex-col justify-center items-center h-full">
          <div class="max-w-2xl sm:mt-12 mt-6">
            <p><%= safe_join(@architecture.description.split("\n"), tag(:br)) %></p>
            <br>
            <% if @architecture.architect.present? %>
              <p><%= Architecture.human_attribute_name(:architect) %> : <%= @architecture.architect %></p>
            <% end %>
          </div>
        </div>
      </div>
      <button class="toggle-btn absolute top-0 right-0 p-4 text-xl">
        <span class="fa-stack hover:scale-110">
          <i class="fas fa-circle fa-stack-2x text-white fa-stack-2x"></i>
          <i class="fa-solid fa-book-open-reader text-theme text-2xl fa-stack-1x pt-1"></i>
        </span>
      </button>
    </div>
    <div class="w-full md:w-144 px-4 md:pt-0 pt-4">
      <h1 class="text-3xl md:text-5xl mb-4"><%= @architecture.name %></h1>
      <div class="relative my-8 mb-20">
        <p><%= simple_format(@architecture.location) %></p>
        <div class="flex items-center pt-2">
          <i class="fa-sharp fa-solid fa-location-dot"></i>
          <p class="px-2">距離 28km</p>
        </div>
        <div class="pt-4">
          <% if @architecture.by?(current_user) %>
            <%= button_to 'Edit', edit_architecture_path(@architecture), method: :get, class: 'w-full bg-sixth text-black mb-4 rounded-full hover:scale-105 hover:drop-shadow-lg' %>
            <%= button_to 'Destroy', architecture_path(@architecture), method: :delete, data: { confirm: t('defaults.message.destroy_confirm') }, class: 'w-full bg-seventh text-white rounded-full mt-4 hover:scale-105 hover:drop-shadow-lg' %>
          <% elsif current_user.like?(@architecture) %>
            <%= button_to 'Check in', new_architecture_path, method: :get, class: 'w-full bg-second text-black mb-4 rounded-full hover:scale-105 hover:drop-shadow-lg' %>
            <%= button_to 'Not Like', like_path, method: :delete, class: 'w-full bg-seventh text-white rounded-full mt-4 hover:scale-105 hover:drop-shadow-lg' %>
          <% else %>
            <%= button_to 'Like', likes_path(architecture_id: @architecture.id), method: :post, class: 'w-full bg-second text-black mb-4 rounded-full hover:scale-105 hover:drop-shadow-lg' %>
            <%= button_to 'Reload', root_path, method: :get, class: 'w-full bg-black text-white rounded-full mt-4 hover:scale-105 hover:drop-shadow-lg' %>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% else %>
  <p><%= t('.no_result') %></p>
<% end %>

<script>
  document.addEventListener("turbolinks:load", function() {
    initializeArchitecture();
  });

  function initializeArchitecture() {
    const images = <%= @architecture.images.to_json.html_safe %>;
    const image = document.querySelector(".image");
    const progressBar = document.querySelector(".progress-bar");
    const toggleBtn = document.querySelector(".toggle-btn");
    const description = document.querySelector(".description");
    const closeBtn = document.querySelector(".close-btn");
    let currentIndex = 0;

    updateProgressBar();

    image.addEventListener("click", function(event) {
      const clickedX = event.clientX - event.target.getBoundingClientRect().left;
      const halfWidth = event.target.clientWidth / 2;

      if (clickedX >= halfWidth) {
        currentIndex = (currentIndex + 1) % images.length;
      } else {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
      }

      image.src = images[currentIndex].url;
      updateProgressBar();
      hideDescription();
    });

    toggleBtn.addEventListener("click", toggleDescription);

    closeBtn.addEventListener("click", hideDescription);

    function updateProgressBar() {
      const progressBarWidth = (currentIndex + 1) * (100 / images.length);
      progressBar.style.width = `${progressBarWidth}%`;
    }

    function toggleDescription() {
      description.classList.toggle("hidden");
      toggleBtn.classList.toggle("hidden");
    }

    function hideDescription() {
      description.classList.add("hidden");
      toggleBtn.classList.remove("hidden");
    }
  }
</script>
